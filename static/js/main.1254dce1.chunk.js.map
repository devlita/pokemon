{"version":3,"sources":["images/Pokemon-Logo.png","components/Navbar.js","graphql/Query.js","components/PokeCard.js","contents/Pokemon.js","contents/MyPokemon.js","components/DetailCard.js","contents/PokemonDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Topbar","styled","nav","Logo","img","NavLink","div","Navbar","pathName","useLocation","pathname","to","src","logo","alt","className","GET_POKEMONS","gql","GET_POKEMON","Container","Card","PokeCard","useQuery","variables","limit","offset","loading","error","data","message","pokemons","results","map","pokemon","image","name","state","Pokemon","Component","MyPokemon","Sprite","Name","p","CatchBtn","button","Description","DetailCard","result","pokemonName","sprites","front_default","types","type","abilities","ability","moves","move","props","location","this","App","client","ApolloClient","uri","path","component","PokemonDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1254dce1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Pokemon-Logo.854ee7ed.png\";","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport logo from '../images/Pokemon-Logo.png'\r\n\r\nconst Navbar = () => {\r\n    const pathName = useLocation().pathname;\r\n\r\n    return (\r\n        <Topbar>\r\n            <Link to=\"/pokemon\">\r\n                <Logo src={logo} alt=\"Pokemon\" />\r\n            </Link>\r\n            <NavLink>\r\n                <Link \r\n                    to=\"/pokemon\" \r\n                    className={pathName === \"/pokemon\" ? \"active\" : \"\"}\r\n                >\r\n                    Pokemon\r\n                </Link>\r\n                <Link \r\n                    to=\"/my-pokemon\"\r\n                    className={pathName === \"/my-pokemon\" ? \"active\" : \"\"}\r\n                >\r\n                    My Pokemon\r\n                </Link>\r\n            </NavLink>\r\n        </Topbar>\r\n    )\r\n}\r\n\r\nconst Topbar = styled.nav`\r\n    padding: 0.5rem 1rem;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100vw;\r\n    height: 3rem;\r\n    background-color: #CC2020;\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 2rem;\r\n`;\r\n\r\nconst NavLink = styled.div`\r\n    a {\r\n        font-size: 1.2rem;\r\n        text-decoration: none;\r\n        margin: 0 1rem;\r\n        color: #F1F1F1;\r\n    }\r\n    a:hover {\r\n        color: #FFFFFF;\r\n    }\r\n    .active {\r\n        color: #FFFFFF;\r\n        border-bottom: 2px solid #FFCB05\r\n    }\r\n`;\r\n\r\nexport default Navbar","import gql from 'graphql-tag';\r\n\r\nexport const GET_POKEMONS = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      count\r\n      message\r\n      results {\r\n        id\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_POKEMON = gql`\r\n  query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      sprites {\r\n        front_default\r\n      }\r\n      abilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import '../App.css';\r\nimport React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_POKEMONS } from '../graphql/Query';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nfunction PokeCard() {\r\n  const {\r\n    loading,\r\n    error,\r\n    data,\r\n  } = useQuery(GET_POKEMONS, {\r\n    variables: {limit: 20, offset: 0},\r\n  });\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n    <Container>\r\n      {data &&\r\n        data.pokemons.results &&\r\n        data.pokemons.results.map((pokemon) => (\r\n          <Card>\r\n            <div>\r\n              <img \r\n                src={pokemon.image}\r\n                alt={pokemon.name}/\r\n              >\r\n              <Link \r\n                to={{\r\n                  pathname: \"/pokemon-detail\",\r\n                  state: { pokemon: pokemon }\r\n                }}\r\n              >\r\n                {pokemon.name}\r\n              </Link>\r\n              <div>\r\n                Owned: 0\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  margin: 1.5rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  width: 12rem;\r\n  background-color: #F8F8F8;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  a {\r\n    font-size: 1.2rem;\r\n    text-decoration: none;\r\n    color: #3473AD;\r\n  }\r\n`;\r\n\r\nexport default PokeCard;","import React, { Component } from 'react';\r\nimport PokeCard from '../components/PokeCard';\r\nimport styled from 'styled-components';\r\n\r\nclass Pokemon extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <PokeCard />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nexport default Pokemon;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass MyPokemon extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>\r\n                    My Pokemon\r\n                </h1>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nexport default MyPokemon;","import '../App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_POKEMON } from '../graphql/Query';\r\nimport styled from 'styled-components';\r\n\r\nfunction DetailCard(result) { \r\n  const current = result.pokemon;\r\n  const pokemonName = current.pokemon.name;\r\n\r\n  const { loading, data, error } = useQuery(\r\n    GET_POKEMON,\r\n    {\r\n      variables: { name: pokemonName },\r\n    }\r\n  );\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Error! ${error.message} ${pokemonName}`;\r\n\r\n  return (\r\n    <Container>\r\n      <Description>\r\n        <Sprite\r\n          src={data.pokemon.sprites.front_default} \r\n          alt={data.pokemon.name}\r\n        />\r\n\r\n        <Name>\r\n            {data.pokemon.name}\r\n        </Name>\r\n\r\n        <CatchBtn>\r\n          Catch!\r\n        </CatchBtn>\r\n      </Description>\r\n\r\n      <Description>\r\n        {data.pokemon.types ? (\r\n          <div className=\"type\">\r\n            <h5>Types:</h5>\r\n            <div className=\"attributes\">\r\n              {data.pokemon.types.map((type) => (\r\n                <div className=\"round\">\r\n                  {type.type.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.pokemon.abilities ? (\r\n          <div className=\"type\">\r\n            <h5>Abilities:</h5>\r\n            <div className=\"attributes\">\r\n              {data.pokemon.abilities.map((ability) => (\r\n                <div className=\"round\">\r\n                  {ability.ability.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.pokemon.moves ? (\r\n          <div className=\"type\">\r\n            <h5>Moves:</h5>\r\n            <div className=\"attributes\">\r\n              {data.pokemon.moves.map((move) => (\r\n                <div className=\"round\">\r\n                  {move.move.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </Description>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Sprite = styled.img`\r\n  width: 360px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 2rem;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst CatchBtn = styled.button`\r\n  padding: 0.8rem;\r\n  margin-bottom: 3rem;\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n  border: none;\r\n  outline: none;\r\n  font-weight: 800;\r\n  text-transform:uppercase;\r\n  &: hover {\r\n    background-color: #CC2020;\r\n    color: #F3F3F3;\r\n  }\r\n`;\r\n\r\nconst Description = styled.div`\r\n  text-align: center;\r\n  .type {\r\n    margin: 2rem;\r\n  }\r\n  .attributes {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    max-width: 480px;\r\n  }\r\n  .round {\r\n    margin: 0.5rem;\r\n    padding: 0.5rem;\r\n    background-color: #F3F3F3;\r\n    border-radius: 15px;\r\n  }\r\n`;\r\n\r\nexport default DetailCard;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport DetailCard from '../components/DetailCard';\r\n\r\nclass MyPokemon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = { data: props.location.state };\r\n      }\r\n\r\n    render() {\r\n        const pokemon = this.state.data;\r\n\r\n        return (\r\n            <Container>\r\n                <DetailCard pokemon={pokemon} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nexport default MyPokemon;","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport Navbar from './components/Navbar';\nimport Pokemon from './contents/Pokemon';\nimport MyPokemon from './contents/MyPokemon';\nimport PokemonDetail from './contents/PokemonDetail';\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\n  })\n  \n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route path=\"/pokemon\" component={Pokemon} />\n            <Route path=\"/my-pokemon\" component={MyPokemon} />\n            <Route path=\"/pokemon-detail\" component={PokemonDetail} />\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}